<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杂谈 on wxx&#39;s blog</title>
    <link>http://oouxx.github.io/categories/%E6%9D%82%E8%B0%88/</link>
    <description>Recent content in 杂谈 on wxx&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 31 Oct 2019 09:36:55 +0800</lastBuildDate>
    
	<atom:link href="http://oouxx.github.io/categories/%E6%9D%82%E8%B0%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>scrapy-redis重复过滤器源码分析</title>
      <link>http://oouxx.github.io/post/scrapy-redis%E9%87%8D%E5%A4%8D%E8%BF%87%E6%BB%A4%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 31 Oct 2019 09:36:55 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/scrapy-redis%E9%87%8D%E5%A4%8D%E8%BF%87%E6%BB%A4%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>scrapy时Python界非常著名的爬虫框架,但是一遇到分布式应用的话就会捉襟见肘了,scrapy-redis就是为了解决这一痛点诞生的,</description>
    </item>
    
    <item>
      <title>我的工作空间</title>
      <link>http://oouxx.github.io/post/my-development-tools/</link>
      <pubDate>Sat, 26 Oct 2019 12:29:45 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/my-development-tools/</guid>
      <description>我的开发工具 Windows平台 Cmder VIM VSCode Idea quick look(类似于mac的空格预览) libtary(类似mac的启动器) AutoHotKey(键盘映射</description>
    </item>
    
    <item>
      <title>最小权限原则</title>
      <link>http://oouxx.github.io/post/%E6%9C%80%E5%B0%8F%E6%9D%83%E9%99%90%E5%8E%9F%E5%88%99/</link>
      <pubDate>Mon, 23 Sep 2019 17:32:36 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/%E6%9C%80%E5%B0%8F%E6%9D%83%E9%99%90%E5%8E%9F%E5%88%99/</guid>
      <description>最小权限原则 最小权限原则最早出现在《容错的操作系统》一书中，他的要求是计算环境中的特定抽象层的每个模块如进程、用户或者计算机程序只能访问当下</description>
    </item>
    
    <item>
      <title>proxychains-ng代理上網</title>
      <link>http://oouxx.github.io/post/privoxy%E7%9C%9F%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</link>
      <pubDate>Fri, 31 May 2019 17:00:43 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/privoxy%E7%9C%9F%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</guid>
      <description>使用proxychains-ng实现真全局代理 安装和使用 1 2 sudo pacman -S proxychains-ng sudo echo &amp;#34;socks5 127.0.0.1 1080&amp;#34; &amp;gt;&amp;gt; /etc/proxychains.conf 验证 1 proxychains curl -I www.google.com 返回200就说明代理成功啦</description>
    </item>
    
    <item>
      <title>docker入门教程</title>
      <link>http://oouxx.github.io/post/docker%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 26 May 2019 09:44:07 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/docker%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</guid>
      <description>docker 安装 下面以Ubuntu为例介绍docker的安装 卸载旧版本 1 2 3 $ sudo apt-get remove docker \ docker-engine \ docker.io 使用apt安装 1 2 3 4 5 6 7 8 $ sudo apt-get update $ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</description>
    </item>
    
    <item>
      <title>select,poll和epoll总结</title>
      <link>http://oouxx.github.io/post/select-poll%E5%92%8Cepoll%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 25 May 2019 12:07:51 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/select-poll%E5%92%8Cepoll%E6%80%BB%E7%BB%93/</guid>
      <description>区别与联系 联系：他们三个都是在Linux上使用的I/O多路复用技术，与多进程和多线程技术相比，I/O多路复用技术的最大优势是系统开销小，系统</description>
    </item>
    
    <item>
      <title>动态语言与鸭子类型</title>
      <link>http://oouxx.github.io/post/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%E4%B8%8E%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sun, 19 May 2019 09:14:03 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%E4%B8%8E%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B/</guid>
      <description>动态语言 今天来说说编程语言中的动态类型语言与鸭子类型，维基百科对动态语言的定义： 动态编程语言是一类在运行时可以改变其结构的语言：例如新的函数</description>
    </item>
    
    <item>
      <title>单例模式及其实现</title>
      <link>http://oouxx.github.io/post/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 06 May 2019 06:56:45 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B/</guid>
      <description>什么是单例模式 单例模式，也叫单子模式，是一种常用的软件设计模式。在应用这个模式时，单例对象的类必须保证只有一个实例存在。许多时候整个系统只需</description>
    </item>
    
    <item>
      <title>修正github自动识别项目语言错误</title>
      <link>http://oouxx.github.io/post/%E4%BF%AE%E6%AD%A3github%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE%E8%AF%AD%E8%A8%80%E9%94%99%E8%AF%AF/</link>
      <pubDate>Wed, 17 Apr 2019 10:49:34 +0800</pubDate>
      
      <guid>http://oouxx.github.io/post/%E4%BF%AE%E6%AD%A3github%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E9%A1%B9%E7%9B%AE%E8%AF%AD%E8%A8%80%E9%94%99%E8%AF%AF/</guid>
      <description>我在GitHub上提交了一个Python爬虫项目，我将爬取的结果保存为.html 文件，其他全部为Python文件，然而GitHub将我的项目</description>
    </item>
    
  </channel>
</rss>